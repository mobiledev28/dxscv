<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="dsCuentas.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 56</value>
  </metadata>
  <data name="customSqlQuery1.Sql" xml:space="preserve">
    <value>select "SCV_Cuenta"."CuentaId",
       "SCV_Cuenta"."UserName",
       "SCV_Cuenta"."Activo",
       "SCV_Cuenta"."FullName",
       "SCV_Cuenta"."TipoUsuarioId"
  from "dbo"."SCV_Cuenta" "SCV_Cuenta"
where "SCV_Cuenta"."Activo" = 1
and "SCV_Cuenta"."TipoUsuarioId" in (1,2)</value>
  </data>
  <data name="dsCuentas.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0iZHNDdWVudGFzIj48VmlldyBOYW1lPSJTQ1ZfQ3VlbnRhIj48RmllbGQgTmFtZT0iQ3VlbnRhSWQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJVc2VyTmFtZSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJBY3Rpdm8iIFR5cGU9IkJvb2xlYW4iIC8+PEZpZWxkIE5hbWU9IkZ1bGxOYW1lIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlRpcG9Vc3VhcmlvSWQiIFR5cGU9IkludDY0IiAvPjwvVmlldz48L0RhdGFTZXQ+</value>
  </data>
  <metadata name="sqlDataSource1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <data name="customSqlQuery2.Sql" xml:space="preserve">
    <value>select "SCV_Mantenimiento"."MantenimientoId",
       "SCV_Mantenimiento"."TipoServicio",
       "SCV_Empresa"."EmpresaId",
       "SCV_Empresa"."Nombre" as "NombreEmpresa",
       "SCV_Ciudad"."CiudadId",
       "SCV_Ciudad"."Descripcion" as "NombreCiudad",
       "SCV_Mantenimiento"."DescripcionMtto",
       "SCV_Mantenimiento"."FechaRealEntrega",
       "SCV_Mantenimiento"."FechaPromesaEntrega",
       "SCV_Mantenimiento"."FechaIngresoaServicio",
       "SCV_Mantenimiento"."NumFactura",
       "SCV_Mantenimiento"."EstatusFactura",
       "SCV_Mantenimiento"."Subtotal",
       "SCV_Mantenimiento"."IVA",
       "SCV_Mantenimiento"."Total",
	 "SCV_Mantenimiento"."Kilometraje",
       "SCV_Proveedor"."ProveedorId",
       "SCV_Proveedor"."RazonSocial" as "NombreProveedor",
       "SCV_Vehiculo"."VehiculoId",
       "SCV_Vehiculo"."Marca",
       "SCV_Vehiculo"."Modelo",
       "SCV_Vehiculo"."Anio",
       "SCV_Vehiculo"."NoSerie",
       "SCV_Vehiculo"."Apodo",
       "SCV_Vehiculo"."Placa",
	   "SCV_Usuario"."Nombre" as "NombreUsuario",
	   "SCV_Usuario"."ApPaterno",
	   "SCV_Usuario"."ApMaterno",
	   "SCV_Vehiculo"."UsuarioIdAsignado"
  from ((((("dbo"."SCV_Mantenimiento"
       "SCV_Mantenimiento"
  inner join "dbo"."SCV_Empresa" "SCV_Empresa"
       on ("SCV_Empresa"."EmpresaId" = "SCV_Mantenimiento"."EmpresaId"))
  inner join "dbo"."SCV_Ciudad" "SCV_Ciudad"
       on ("SCV_Ciudad"."CiudadId" = "SCV_Mantenimiento"."CiudadId"))
  inner join "dbo"."SCV_Proveedor" "SCV_Proveedor"
       on ("SCV_Proveedor"."ProveedorId" = "SCV_Mantenimiento"."ProveedorId"))
  inner join "dbo"."SCV_Vehiculo" "SCV_Vehiculo"
       on ("SCV_Vehiculo"."VehiculoId" = "SCV_Mantenimiento"."VehiculoId"))
  inner join  "dbo"."SCV_Usuario" "SCV_Usuario"
       on ("SCV_Usuario"."UsuarioId" = "SCV_Vehiculo"."UsuarioIdAsignado"))
where "SCV_Mantenimiento"."MantenimientoId"  = @MantenimientoId</value>
  </data>
  <data name="sqlDataSource1.ResultSchemaSerializable" xml:space="preserve">
    <value>PERhdGFTZXQgTmFtZT0ic3FsRGF0YVNvdXJjZTEiPjxWaWV3IE5hbWU9IlNDVl9NYW50ZW5pbWllbnRvIj48RmllbGQgTmFtZT0iTWFudGVuaW1pZW50b0lkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iVGlwb1NlcnZpY2lvIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkVtcHJlc2FJZCIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9Ik5vbWJyZUVtcHJlc2EiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQ2l1ZGFkSWQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJOb21icmVDaXVkYWQiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iRGVzY3JpcGNpb25NdHRvIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IkZlY2hhUmVhbEVudHJlZ2EiIFR5cGU9IkRhdGVUaW1lIiAvPjxGaWVsZCBOYW1lPSJGZWNoYVByb21lc2FFbnRyZWdhIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iRmVjaGFJbmdyZXNvYVNlcnZpY2lvIiBUeXBlPSJEYXRlVGltZSIgLz48RmllbGQgTmFtZT0iTnVtRmFjdHVyYSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJFc3RhdHVzRmFjdHVyYSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJTdWJ0b3RhbCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iSVZBIiBUeXBlPSJEZWNpbWFsIiAvPjxGaWVsZCBOYW1lPSJUb3RhbCIgVHlwZT0iRGVjaW1hbCIgLz48RmllbGQgTmFtZT0iS2lsb21ldHJhamUiIFR5cGU9IkRlY2ltYWwiIC8+PEZpZWxkIE5hbWU9IlByb3ZlZWRvcklkIiBUeXBlPSJJbnQ2NCIgLz48RmllbGQgTmFtZT0iTm9tYnJlUHJvdmVlZG9yIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlZlaGljdWxvSWQiIFR5cGU9IkludDMyIiAvPjxGaWVsZCBOYW1lPSJNYXJjYSIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJNb2RlbG8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQW5pbyIgVHlwZT0iSW50MzIiIC8+PEZpZWxkIE5hbWU9Ik5vU2VyaWUiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQXBvZG8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iUGxhY2EiIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iTm9tYnJlVXN1YXJpbyIgVHlwZT0iU3RyaW5nIiAvPjxGaWVsZCBOYW1lPSJBcFBhdGVybm8iIFR5cGU9IlN0cmluZyIgLz48RmllbGQgTmFtZT0iQXBNYXRlcm5vIiBUeXBlPSJTdHJpbmciIC8+PEZpZWxkIE5hbWU9IlVzdWFyaW9JZEFzaWduYWRvIiBUeXBlPSJJbnQ2NCIgLz48L1ZpZXc+PC9EYXRhU2V0Pg==</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="OrdenMtto.Watermark.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAASYAAABFCAYAAADn00uaAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAO
        xAAADsQBlSsOGwAAABl0RVh0U29mdHdhcmUAQWRvYmUgSW1hZ2VSZWFkeXHJZTwAABK7SURBVHhe7Z0H
        dFVFGsexF7CgInbFdtS1rOKxt2OJvZ3VlVVs2HsD2UXWdjzWo2tZpQZIIAVCEppASAECSQhSQgk1AUIN
        GkoQUGRx9v3nzU3uu/nue3Pvu69c8v04/5O8uTPzbsK8f6Z8M7eNYBiGSTLYmBiGSTrYmBiGSTrYmBiG
        STrYmBiGSTrYmBiGSTrYmBiGSTq0jGnduvWiqKhEDMvIEgMGDhYjcvLEjMqZYtu2bSpHkIaGTWJ6WYWY
        WjpNTJ48VRQXTxZl5TNkeTNr1q4V06eXi99++02lNLN582YxbVqZ/GpQXb1Y5kedJSVTRHFACxZWix07
        dqocoeD9JhUWi/ShmSJ1UJrIHzVGLFiwUOzZs0fl8IaKGTPFmjVr1SuGYbwiojGVBkyiX/9UqazsEWLU
        6LGBD/uQprQNG+pVzoCBLFrclG5VecUMlUuIsoB5IW2TyXwMli+vkdeWBb4apA/NCKnL0OAhQ1vUAVMz
        ruN+YUrG68ysEQHD26JyRgeMD3VWzKhUKQzDeEVYY5oW6KXgw/fj+Ini119/ValB0GMpKCgU27dvVylC
        LF26TOavrV2hUoRobGwUuXmjZfovDQ0ybdbsOfL11q1b5WszK1fVyWsrV65SKTCmTDEkbZh6JcSff/7Z
        9F75o8aq1GZTmjBxUov7XRi4X1yDme3a9YdKdcekSUFTmjylVN4LwzDeYmtMGErhw5czMk+lRMYwi1UB
        czEDk0H64iVL5Ws3xpSW3mxMBkOHZcq8AMNKfB/ufmGmyAMDc0uh6ilNCZgSwzCxwdaYMDeEDyDmg3Qx
        jGlDffPwDqBngfT16zfI106NCaaUlp6hXgXZvn2HnO8aOixLvq6s/EmWs85nWRk8JF3mczPfZAzf8PMw
        DBM7bI0pLz84/Prjj9Bhz+rVa+QHFD0HzD/BjAwwL4Qyubmj5HCqtHS6nJNCGoZ9Bk6NKWdkvjQh1Dlx
        YqH8ijyQMWwcPXqcfP3777/L13YUFpXIfFu2OJtrMkxpytRpKoVhmFhha0wwA3wQd+/+n0oJUjVvvkw3
        NHbseHWleeIaJtJ/wKCmPEuXLVc5gsyaFTSmxsbQVT1QV7daXjMbkzGBba4TRoT3MzDyRDImrBginzHf
        pQObEsPEF1tjwrI89QHGZC+GQTt3/iavo/diYAzl6gK9KpCfP0YMTB0ivzfz06zZMl+jJdwAoCyu1a5Y
        qVJaTn5TIIQA5cxhBhRYmUM+a0/QDvNEN8Mw8cHWmAyDMBuPFVwfP6FAvWo2JqO3gxU5vB6Zmy9fG8yd
        O0+mU/NXTddM8UF2k99mMMREOQwx7aiv3yjzjB3X3MsLR9NEN/eUGCau2BoTyM0bJT+Y6OFQ4BpCCQwM
        YzKHC2CeCWlL1IocQCwR0qyGhWV8Y3J6165dKjW4+hapxwSMsIR58xeolGYQ/IkhJq5v2dJybstKwaQi
        mZd7SgwTf8IaE+ZrRuTkyg8ozKGsvELMnjNXxjdlqSGReVK7unqRTDNPiGPYhzTIHNyIyHGkZWQOF5Uz
        f5JR1IZx1NTUqlxBjPKRwP3m5OTJvNnDc2SdMFXzZPkS073ZwXNKDJNYwhoTgLFgshqBicaHG8JWDxjV
        FtPKGoZ/6AWtXbtOpQTBJHVWdo6oqpqvUoIsWFgt6zHqzMjIDultGcBYzD2zcBj3a45OhzDk3PjzzyqX
        PcacEpsSwySOiMZkBrFD6PVg4tsNdrFDWJ2zRmp7AepESIJupDebEsMkB46MaW/GMKWpbEoMk3DYmAIY
        E928zYRhkoNWb0zR9pTGry4Xfy/qJbqWvJcQPVLyruhS3Fss3Rq6P9ENdXV1Ij8/X/Tu3Vs8/vjj4uab
        bxaXXXaZ6Ny5s7jmmmvEgw8+KN58803Rp08fMWfOHFUqOqZOnSrS09NFdna2J8rMzJRfKyoqxOrVq9W7
        OGf27NmiuLhYTJ48Oa7Ce86Y0XwSB44GQnpJSUmLvIZQJlJgsVfgd1pYWEjeB4R7we/eDmz6HzBggOjW
        rZt49dVXxfjxdOhOqzampp5SFMO3T6vSxDHpKQnX1A3ujALzcD/88IM0oQMOOEC0adNGW+eee67o3r27
        /BC7BcZH1e2F8PNcccUVokePHmLmzJnqHfXAz0bVGQ8de+yxTadW1NbWknmsws8Za1atWiWOOuoo8v3N
        at++vSoRSmpqqjjiiCPEeeedJ+666y5xxx13iOOOO06cc845YuXK5oBq0GqNyas5pR+qR5JGEW9Vblyo
        7kgPxIl9/PHHsmFQjcup7rzzTlFZ6fxsqpSUFLK+WOiWW26RPQ8dLr74YrKOeOjUU09tMqYVK1aQeSg9
        8MADskwsQM+tU6dO5PtadeKJJ6pSzXzzzTfyWkZG6GZ8gPvGNbM5tUpjMnpKXkx0+9GYJkyYIM4+++yQ
        xuSV3njjDUdnVN1+++1kPbEUhqORuPzyy8my8dBZZ53V9DvEh5XKY6eePXvKcl5z3XXXke9HCQZmZv36
        9TIdw3b8Ybjhhhvk//v5558vfvzxR5nn+uuvl68NWp0xeTF8M+M3Y3rnnXdaNCSvddFFF4nly0M3btuR
        CGOCbrzxRnUHNH41JghzgF7StWtX8n3sZDWmF154Qc5TgiuvvFKaHOaaPv30U5l/9+7dcu/qgQceKPOA
        VmVMTT2lUm9MCfjJmB577LEWjShWOvLII0V5ebl6Z3sSZUwQhpF2+NmYoIkT9QKSI+HmD5nVmK666irx
        9ttvy+/vv/9+aVIY0r311ltyyGxsqMf3Bq3GmLB1xqvhmxm/GJPTv3peqbq6Wt0BTSKNCfrggw/UnYTi
        d2Pad999xcKFzuYdrQwZMoSsO5KsxoQV3V69esnv0Q5PO+00ccEFF8i85j2xl156qfqulRhTLHpKBn4w
        pvfee69F44mXjjnmmBZP0zGTaGOC1hKnXPjdmCD87jdt2iTrcUpRURFZp46sxvTss882mc7VV18tXn75
        Zfn9ySefLJ5//nn5/Y4dO8Qhhxwivwd7vTHFqqdkkOzGVFZWRjaeeOrWW29Vd9OSZDAmTNhbSaQxnX76
        6Z4YE2QeHumybNkyx6EjZlmNCfFxSJ87d6747LPPmswIq7j777+//P6JJ56QCzIGe7UxxWObSbIY05T1
        dBzTCSec0KLhJELDhtHH1iSDMSFkAhOwZhJpTO3atfPMmCDEC+mC3u1JJ51E1qMrqzGBzz//XF5DzJyZ
        NWvWiHvvvVdeW7x4sUrdS40J/6nGWeM4DyqW6BrTSRl3i+emfSJenP6Z/Oqlnin9WNQ0Bk8NNfPFF1+E
        NBgnwocDcwOPPvqo/GuGWJMzzzyTzKsjTIZTp4Y6MaZPPvlEzJo1y1ZTpkwRH330kejYsSNZPpysQaK6
        xoRAzLS0NDF48GAxaNCgqNWvXz8xcuRIdRfeGBP0yiuvqBrD40XAK2VM4OuvvxYdOnQQl1xyiXjkkUek
        IaGXhABL/P+Z2Wt7TDgqBXNLsUbXmP6a21WViA+YVDz88MPJhhNOGEZ8++234pdfflE1hYLtBtiuQpWN
        JDRMK06MCfMeOjQ0NDiO04KxmNE1prvvvluViA1eGRP01VdfqVppsGJGlXMqO2MC6JGh9/T000/LLSk5
        OTnqSiitYvI7luga0wUjH1Yl4gP2n1GNJpwwSal7Fjr2RGFylarHTlSDdWJM2AOnC/ZtUXXYCb0xM7rG
        dNNNN6kSscFLY4KwF5ICW4uo/G4Uzph0YWOKEifG9GfgX7xAdC3VaOyEmBKn1NTUiLZt25L12QmT8WZi
        ZUzAyXYba8S0rjFhj2Es8dqYIExCm/n+++/JfG7FxpQEZNYUiI7ZKaJjVnhdMip+QzkMw7DaQTUaSljC
        dQt2mlN12slqALE0JsTLUPVQwtyUGV1jwh7BWBILY8J834YNwYfPYnc/lScasTHFkCVb68S0DVVyGd5O
        cxuWih4V/xXt+qSIdv3CqG+K6JT+oJixcYGY+fMisi4I18vr54ttf+xQd+GO0aNHkw3GTlgejgYncxPX
        XnutKhUkVsaEza/77bcfWQ8lBBOa0TUmrGBhYvmll14SL774omNhrgU9FjtiYUwQFjYKCgqiCguwk6fG
        9GjaPa1GOtxb0J0ckpmFntJBX6WINq8H1DOM3gzonWCZDsNa1mMVDDEaPvzwQ7LBUAoXY6QLVrSouilh
        Xsp8dpATYxo7dqwqFRkn9UILFoQ+WUfXmLzQhRdeqN61JbEypliKjcmldHig8J+kaZgFYzoExvRGQP8M
        o+4pYt/ewTI6xlRWP0/dhTuwxE81GEo4tMsLnMS+LFq0SJVyZiBYOcPmT6zsWIV0rMZh0htxO1R5OyEM
        wko8jQm/AzvYmIgP8N4qHf5R3Js0DbOkMf0nYDxvBfSvMOoRMKZ/B8voGFNFYEgXDVgpohoMJa9OosTp
        llT9lMxnIjkxpsMOO0zGKCEWxiqk4zpVLpIQHmHFj8aEEIlYHXCHY0lwgB11zSo2JpfSwc/GhN3cVIOx
        CnMw0Rw/awb7n6j3oGScwQOcDrm8FhX1DfxoTNiPhrOPzjjjDPK6Wz333HPyaUOHHnooed0qNiaX0sHP
        xoRVNqrBWIWJT6+MCRPA1HtQMp/znGhjKi2lH0DhR2NCz9FpmUiCyQFsBqauU2Jjcikd/GxMWPmiGoxV
        OBoDq1degOBM6j0omc8KSqQxWVfizPjRmI4//vim5zMikJLK40ToIRl/uLBlhMpDiY3JpXTwszHdc889
        ZIOhhDgkL9DtpUHmp4AkwpgOOuggkZWVpe6Axq/G1NjYqEoKeaY7lU9X5rnAqqoqMg8lNiaX0sHPxuRk
        WOXFGdGYf9CNh8HxqevWNT9CPt7GBNPWOfY3nsaECWs7nBoTVijNuD0gEJuJzSTMmJhQ/lbYkzQNs6Qx
        GeECVPySoYBxxTNcoG/fvmSDoYTVrGj57rvvyLop4RA0M7E2JvSOEAGOY4Wd9A51jQl14/jZaITTCeyI
        1piAU5PF5lorbExJgo4xHRcwJhlgqWFMbeJoTAgBoBqMnXAovFv27NmjvYwMdenSRZUM4sSYHn74Ye0V
        R0NUjJIOuh9mHN0RS7wwJgzvdP+P7AJu2ZiShJXb1os5DUvFvE3LbbW8cY34V2Vf0bZfimjbP4wC1zsN
        +7ssU715RYt6zKpqWCa2796p7sI9eLYX1WjsZD0PR5eHHnqIrM9OAwcOVCWDODEmYwjmZB8gJvh1Htdk
        RdeYkul0ATtjAvPnzyfLmAUTp0InABuTz8iomRDcqJsZRnHexAuczDNBOLvJ6RN1cSIBVVc4bdy4UZUO
        4sSYjAlrnIZJXQ+n1157TZbVZW8zJpCbm0uWgw4++GB5BK4dbEw+I1mPPcG2D6rRhBMCLnGYW6Tn4KOR
        4qm2VB3hhN6VFTfGBNxM6mKrjt0BeFZ0jcmLvYbh8NKYgN1KHR5GGQ42Jp+RrMYEnGxNMeuUU06RzwHD
        X1gMAXAWM06uxKR6NKccWs8BAk6MyXy6AI5PdnPUL569j0PR8FwznIiJCfFJkybJaHSzaekaE8692rlz
        pxSe9BGtMB+Ex3EbeG1MAMfamsv1799fXbGHjclnJLMxLVmyhGw4iZDdc/XdGhPAcS1UPrfKy8tTNesb
        E8IfYAjY2oIVzmjVvn17+bRaNw8j0DUm8OSTT8qzpNCD0oGNyWckszGB119/nWw88RTmLzZv3qzuKJRo
        jAmMGDGCzOtGY8aMUbXqG1MsdPTRR8fcmJzCxuQzkt2YQKx2nOvK/NQPK9EaE3j//ffJ/E41btw4VWNi
        jcntAy/ZmJgm/GBMeNIsHsdENaJYq0ePHuouaLwwJoChCVXGidiY7GFj8hl+MCaAiWenDw6IVjg6NhJe
        GROI9vFDbEz2sDH5DL8YE6iurpaNhmpMXuvdd99V7xoeL40JPPXUU2RZHbEx2cPG5DP8ZEwA5+rcd999
        ZIPyQpi4tXuIIYXXxgS+/PJLsnwksTHZw8bkM77XNKa/5HRJCmMywPnZXveennnmGVFfX6/eQY/bbruN
        rIuSrjEBPFzA6dnfbEz2sDH5jM/nDSWNyKoO6bcmlTEBPHW3T58+8khWqoHpCE89wSOI0HDdgCeEUPVS
        cvPgBARR4mQBxAhRdZo1fPhwVUo42pjstfbZZ58mY3Iaq4UjaGIBztCi3s9O0cLGFCVLt9aJ7NpCkbOi
        2FbDa4vEuLrpqkRygoaHeSEMrXBEKza/Ug0Opxp27txZdOvWTfZg7OKTdElNTZXPZMPqnZ0QqY2jONya
        H0BPAiaF6PVevXrJjb04iwqreZiXQrwXItwNEIKALSyJEH5mw5gQjU7loYT9keaocS/BPjrqPSm52TRt
        hY2JYZikg42JYZikg42JYZikg42JYZikg42JYZikg42JYZikg42JYZgkQ4j/AzPfYDX+LWGHAAAAAElF
        TkSuQmCC
</value>
  </data>
</root>